buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.3'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'org.zerock'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

/* JSON 객체로 변환 */
    implementation 'org.json:json:20230227'

/* webSocket */
    implementation 'org.springframework.boot:spring-boot-starter-websocket'

/* kafka */
    implementation 'org.springframework.kafka:spring-kafka'
    testImplementation 'org.springframework.kafka:spring-kafka-test'

/* redisson(Redis rock) */
    implementation 'org.redisson:redisson-spring-boot-starter:3.20.0'

/* DigestUtils */
    implementation 'commons-codec:commons-codec:1.16.0'


/* JWT 토큰 */
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

/* 썸네일 지정 */
    implementation 'net.coobird:thumbnailator:0.4.19'
/* 스프링 시큐리티 */

    // 스프링 시큐리티 추가 : 로그인 처리용 p678 https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-security
    implementation("org.springframework.boot:spring-boot-starter-security:3.4.7")

    // 스프링 시큐리티6+타입리프 https://mvnrepository.com/artifact/org.thymeleaf.extras/thymeleaf-extras-springsecurity6
    implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity6:3.1.1.RELEASE'

/* Spring MVC */
    implementation 'org.springframework.boot:spring-boot-starter-web'
    developmentOnly 'org.springframework.boot:spring-boot-devtools' // 자동 처리 등 유틸

/* JUnit 단위테스트 */
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

/* thymeleaf */
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    implementation 'nz.net.ultraq.thymeleaf:thymeleaf-layout-dialect:3.1.0' /* 레이아웃 추가 */

/* DB */
    implementation  'org.mariadb.jdbc:mariadb-java-client'						/*마리아 db 드라이버*/
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

/* lombok 어노테이션 확장 */
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'


/* lombok 테스트용 추가 */
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'

/* DTO <-> Entity */
// https://mvnrepository.com/artifact/org.modelmapper/modelmapper
    implementation 'org.modelmapper:modelmapper:3.1.0'

    /* validation */
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: '3.2.4'

    /*  카카오로그인 oauth2 추가 */
    // https://mvnrepository.com/artifact/org.springframework.security/spring-security-oauth2-client
    implementation 'org.springframework.security:spring-security-oauth2-client'

    //
    implementation 'net.coobird:thumbnailator:0.4.19'

    //이메일
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    // Spring Data Redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // Optional: Lettuce 클라이언트 (Spring Boot 2.x 이상 기본)
    implementation 'io.lettuce:lettuce-core'

    /*  섬네일 추가 */
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor(
            "jakarta.persistence:jakarta.persistence-api",
            "jakarta.annotation:jakarta.annotation-api",
            "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    )
}

tasks.named('test') {
    useJUnitPlatform()
}


/* query dsl */
sourceSets {

    main {
        java {
            srcDirs = ["$projectDir/src/main/java", "$projectDir/build/generated"]
        }
    }
}
/* 쿼리 dsl 사용법 -> 오른쪽에 있는 Gradle 메뉴를 열고 task-> other를 찾아서 complieJava 실행*/
/* 하단에 complie가 된다.
-> 왼쪽 탐색기 -> build-> generated -> main -> domain -> Q로 시작하는 클래스
쿼리dsl용 객체로 우리가 커스텀 하면 안됨!!!!
******** 주의사항 : 엔티티나 dto를 건딜면 Q도메인을 다시 생성해야 한다.***********
삭제 방법 -> 오른쪽 Gradle 메뉴 -> Tasks->build->clean 후 재생성
*/

//QBoard등 매번 난리나는거 이거때문
//compileJava.dependsOn('clean')